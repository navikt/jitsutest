name: 'Deploy main'
on:
  push:
    branches:
      - 'main'

jobs:
  build:
    name: 'build'
    runs-on: 'ubuntu-latest'
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: 'actions/checkout@v4'
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT


      - name: 'Build and push'
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: team-researchops
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies with pnpm
        run: pnpm install --no-frozen-lockfile

    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: 'ubuntu-latest'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: 'actions/checkout@v4'
      - name: 'Deploy'
        uses: 'nais/deploy/actions/deploy@v2'
        env:
          CLUSTER: 'prod-gcp'
          RESOURCE: nais.yaml
          VAR: image=${{ needs.build.outputs.image }},version=${{ github.sha }}